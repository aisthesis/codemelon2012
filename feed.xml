<?xml version ="1.0" encoding="utf-8"?>
<!-- Atom feed for codeMelon
author Marshall Farrier
date 2/9/11
-->
<feed xmlns="http://www.w3.org/2005/Atom">	
	<title>codeMelon</title>
	<link href="http://codemelon.com/feed.xml" rel="self" type="application/rss+xml" />
	<updated>2011-02-09T15:00:00Z</updated>
	<author>
		<name>Marshall Farrier</name>
		<uri>http://marshallfarrier.com/</uri>
		<email>info@codemelon.com</email>
	</author>
	<id>http://codemelon.com/</id>
	<category term="programming" />
	<rights>(c) 2011 Marshall Farrier</rights>
	<icon>/image/icon.png</icon>
	<logo>/image/logo.png</logo>
	
	<entry>
		<title>Android tutorial: OnClickListener for a RadioGroup</title>
		<link rel="alternate" href="http://codemelon.com/articles.php?animate=0&article=20110209" />
		<updated>2011-02-09T15:00:00Z</updated>
		<author>
			<name>Marshall Farrier</name>
			<uri>http://marshallfarrier.com/</uri>
			<email>info@codemelon.com</email>
		</author>
		<summary>How to set up a RadioGroup and how to use View.setTag() and View.getTag() methods</summary>
		<content type="xhtml">
			<div xmlns="http://www.w3.org/1999/xhtml">				
				<p>This tutorial will show first how to create a RadioGroup listener and, second, 
				how to identify specific buttons when you can't access them through a resource id. 
				Anonymous radio buttons (and other views)
				will normally occur when you create them dynamically from a database or some other resource.
				I couldn't find a good tutorial on setting up a radio group when I was working on it myself,
				so I thought I would share what I've learned. This tutorial assumes that you know the basics
				of setting up activities and views.
				... <a href="articles.php?animate=0&article=20110209">more</a></p>
			</div>
		</content>
		<category term="android" />			
		<id>tag:codemelon.com,2011-02-09:/proj_android_radio_group.php</id>
	</entry>	
	
	<entry>
		<title>Java Graph Library</title>
		<link rel="alternate" href="http://codemelon.com/articles.php?animate=0&article=20110206" />
		<updated>2011-02-06T15:00:00Z</updated>
		<author>
			<name>Marshall Farrier</name>
			<uri>http://marshallfarrier.com/</uri>
			<email>info@codemelon.com</email>
		</author>
		<summary>This library is a Java implementation of the graph datastructures
			and algorithms ... </summary>
		<content type="xhtml">
			<div xmlns="http://www.w3.org/1999/xhtml">	
				<p>This library is a Java implementation of the graph datastructures
				and algorithms presented in Cormen, Leiserson, Rivest and Stein, <a href="http://mitpress.mit.edu/algorithms/">Introduction 
				to Algorithms, 3rd ed.</a>(CLRS).
				I have also used some ideas from <a href="http://www.cs.princeton.edu/~rs/">Robert Sedgewick's</a>
				graph algorithms books (in C as well as in Java) and a few other sources. I started developing the library
				late last fall while working through the graph theoretical portion of CLRS. To begin with, I just found it helpful
				for getting a solid grasp of the material in the book. But then I also discovered that Java has no standard support for graphs (although there
				are several unofficial graph libraries for Java easily found by googling). Boost, by way of contrast, does
				provide C++ support for graphs. Since I intend to continue the study of graph theory both from a mathematical
				... <a href="articles.php?animate=0&article=20110206">more</a></p>
			</div>
		</content>
		<category term="graph theory" />
		<id>tag:codemelon.com,2011-02-06:/proj_graph1.php</id>
	</entry>
	
	<entry>
		<title>Android development: Creating a custom view</title>
		<link rel="alternate" href="http://codemelon.com/articles.php?animate=0&article=20110205" />
		<updated>2011-02-05T15:00:00Z</updated>
		<author>
			<name>Marshall Farrier</name>
			<uri>http://marshallfarrier.com/</uri>
			<email>info@codemelon.com</email>
		</author>
		<summary>The technique I'll present here allows you to create a custom view entirely in Java, then
			embed that view into an XML layout.</summary>
		<content type="xhtml">
			<div xmlns="http://www.w3.org/1999/xhtml">				
				<p>The technique I'll present here allows you to create a custom view entirely in Java, then
				embed that view into an XML layout. While there are already numerous tutorials for
				creating custom views both on the web and in the literature, I couldn't find anything that
				explained what is actually essential in this particular kind of configuration. So, I had to piece it together
				from tutorials that explained something kind of similar but still not quite the same and then the usual
				trial and error. ... <a href="articles.php?animate=0&article=20110205">more</a></p>
			</div>
		</content>
		<category term="android" />			
		<id>tag:codemelon.com,2011-02-05:/proj_android_custom_view.php</id>
	</entry>	
</feed>